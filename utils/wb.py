from urllib import parse
import requests

from utils import db


def get_search(query, curr_page, city):
    parse_query = parse.quote(query)
    req = requests.get("https://catalog-ads.wildberries.ru/api/v5/search?keyword=" + parse_query,
                       cookies={"__dst": city})
    data = req.json()
    if data["pages"] is None:
        return None

    msg_text = f"<b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –∑–∞–ø—Ä–æ—Å—É <u>{query}</u>:</b>\n\n"

    msg_text += "<b>–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–π:</b>\n"
    for category_id in data["prioritySubjects"]:
        category = db.get_category(category_id)
        msg_text += f"ID {category['id']} - {category['name']}\n"

    msg_text += "\n<b>–†–µ–∫–ª–∞–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö:</b>\n"
    for page in data["pages"]:
        msg_text += f"- –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page['page']}, –ü–æ–∑–∏—Ü–∏–∏: {', '.join(map(str, page['positions']))}\n"

    msg_text += "\n<b>–†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–∏:</b>\n\n"
    numbers_emoji = ["1‚É£", "2‚É£", "3‚É£", "4‚É£", "5‚É£", "6‚É£", "7‚É£"]
    for index, product in enumerate(data["adverts"][curr_page * 7 - 7:curr_page * 7]):
        req = requests.get(f"https://card.wb.ru/cards/detail?nm={product['id']}")
        brand = req.json()["data"]["products"][0]["brand"]
        msg_text += f"{numbers_emoji[index]} <b>CPM {product['cpm']} —Ä—É–±</b>, –ê—Ä—Ç–∏–∫—É–ª: <u>{product['id']}</u>, –ë—Ä–µ–Ω–¥: {brand}\n\n"
        pass

    msg_text += "<i>üî• –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å —Ç–æ–≤–∞—Ä –±–µ–∑ —Ç—Ä–∞—Ç –Ω–∞ —Ä–µ–∫–ª–∞–º—É?</i>\nüëâ @automate_mp"
    return_data = {"msg_text": msg_text, "products_count": len(data["adverts"])}
    return return_data


def get_card(article_id, curr_page, city):
    req = requests.get("https://carousel-ads.wildberries.ru/api/v4/carousel?nm=" + article_id, cookies={"__dst": city})
    data = req.json()

    msg_text = f"<b>–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Å—Ç–∞–≤–∫–∏ —Ä–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–µ–π –ø–æ –∞—Ä—Ç–∏–∫—É–ª—É <u>{article_id}</u>:</b>\n\n"

    msg_text += "<b>–†–µ–∫–ª–∞–º–æ–¥–∞—Ç–µ–ª–∏:</b>\n\n"
    numbers_emoji = ["1‚É£", "2‚É£", "3‚É£", "4‚É£", "5‚É£", "6‚É£", "7‚É£"]

    for index, product in enumerate(data[curr_page * 7 - 7:curr_page * 7]):
        req = requests.get(f"https://card.wb.ru/cards/detail?nm={product['nmId']}")
        brand = req.json()["data"]["products"][0]["brand"]
        msg_text += f"{numbers_emoji[index]} <b>CPM {product['cpm']} —Ä—É–±</b>, –ê—Ä—Ç–∏–∫—É–ª: <u>{product['nmId']}</u>, –ë—Ä–µ–Ω–¥: {brand}\n\n"

    msg_text += "<i>üî• –•–æ—Ç–∏—Ç–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç—å —Ç–æ–≤–∞—Ä –±–µ–∑ —Ç—Ä–∞—Ç –Ω–∞ —Ä–µ–∫–ª–∞–º—É?</i>\nüëâ @automate_mp"
    return_data = {"msg_text": msg_text, "products_count": len(data)}
    return return_data
